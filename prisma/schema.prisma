// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(uuid())
  name String
  email String
  password String
  created_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("users")  
}

model Category{
  id String @id @default(uuid())
  name String

  created_at DateTime? @default(now())
  update_at DateTime? @default(now())

  @@map("categories")  
  products Product[]
}

model Product{
  id String @id @default(uuid())
  name String
  price String
  description String
  banner String

  created_at DateTime? @default(now())
  update_at DateTime? @default(now())

  category Category @relation(fields: [category_id], references: [id])
  category_id String
  @@map("products") 
  items Item[]

}

model Order{
  id String @id @default(uuid())
  table Int
  status Boolean @default(false)
  draft Boolean @default(true)
  name String?

  created_at DateTime? @default(now())
  update_at DateTime? @default(now())
  @@map("orders")
  items Item[]
}

model Item{
  id String @id @default(uuid())
  amount Int

  created_at DateTime? @default(now())
  update_at DateTime? @default(now())

  order Order @relation(fields: [order_id], references: [id])
  order_id String
  @@map("items")
  product Product @relation(fields: [product_id], references: [id])
  product_id String
 }
